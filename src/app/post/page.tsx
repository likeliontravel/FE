'use client';

import React, { useState, useEffect, useCallback } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import styles from '../../../styles/post/postList.module.scss';
import SearchBar from '../SearchBar/SearchBar';

interface PostType {
  id: number;
  title: string;
  writer: string;
  content: string;
  image: string;
}

const testPosts: PostType[] = [
  {
    id: 1,
    title: 'Ïó¨Ïàò ÎãπÏùºÏπòÍ∏∞ Ïó¨Ìñâ ÌõÑÍ∏∞ + ÏàôÏÜå ÍøÄÌåÅ Ï†ÑÏàòÌï¥Ïöîüôå',
    writer: 'Ïó¨Ï†ï',
    content:
      'Ïò§ÎèôÎèÑÏóêÏÑú ÎèôÎ∞±ÍΩÉ Íµ¨Í≤ΩÌïòÍ≥†, Ï†ÄÎÖÅÏóî ÏºÄÏù¥Î∏îÏπ¥ ÌÉÄÍ≥† Ïó¨Ïàò Î∞§Î∞îÎã§ Íµ¨Í≤ΩÌñàÏñ¥Ïöî! Î∞§Ïù¥ ÎêòÎãàÍπå Î∞òÏßùÏù¥Îäî Ï°∞Î™ÖÎì§Ïù¥ Îçî Ïù¥ÏÅú ÎäêÎÇå.. ÌäπÌûà ÏºÄÏù¥Î∏îÏπ¥Î•º ÌÉÄÍ≥† ÎÇ¥Î†§Îã§Î≥∏ ÏïºÍ≤ΩÏùÄ Íº≠ Î≥¥ÏãúÎäîÍ±∏ Ï∂îÏ≤ú..! Í∑ºÏ≤ò Ïπ¥ÌéòÏóêÏÑú Îî∞ÎúªÌïú Ïª§Ìîº Ìïú Ïûî ÎßàÏãúÎ©¥ÏÑú Î∞îÎùºÎ≥∏ Î∞îÎã§ÎèÑ ÌïúÍªè ÎãÆÏïòÏäµÎãàÎã§.. Ïù¥Îü∞ Í≥≥Ïù¥ÎùºÎ©¥ ÌïòÎ£® Ï¢ÖÏùº ÏûàÏñ¥ÎèÑ ÏßÄÎ£®ÌïòÏßÄ ÏïäÏùÑ Í≤É Í∞ôÏïÑÏöî!*¬¥-`v Ï†ÄÌù¨Îäî ÏàôÏÜåÏùò Í≤ΩÏö∞ ÏïÑÍ≥†Îã§...',
    image: '/imgs/sample1.png',
  },
  {
    id: 2,
    title: 'Ïò¨ÎßåÏóê Í∞ÄÏ°±Îì§Í≥º Ïó¨ÏàòÏóêÏÑú Î≥¥ÎÇ¥Îäî Ïó¨Ïú†Î°úÏö¥ ÌïòÎ£®',
    writer: 'ÌÜ†Î¶¨',
    content:
      'Ïó¨ÏàòÏóê Ïò§Î©¥ Ïó¨Ïú†Í∞Ä Í∞ÄÎìùÌï¥ÏßÄÎäî Í≤É Í∞ôÏïÑÏöî. Ïù¥Î≤àÏóî ÎÇÆÏóî Ïò§ÎèôÎèÑÏóêÏÑú ÏûêÏó∞ÏùÑ Ï¶êÍ∏∞Í≥†, Î∞§Ïóî Ïπ¥ÌéòÏóêÏÑú Ïó¨Ïàò Î∞§Î∞îÎã§Î•º Î∞îÎùºÎ≥¥Î©∞..',
    image: '/imgs/sample2.jpg',
  },
  {
    id: 3,
    title: 'Ïó¨Ïàò Î∞îÎã§ÏôÄ ÏÇ∞Ï±ÖÎ°úÎ•º Îî∞Îùº',
    writer: 'Ìë∏Î•∏ÌïòÎäò',
    content:
      'ÏïÑÎ¶ÑÎã§Ïö¥ Ìï¥ÏïàÏÑ†ÏùÑ Îî∞Îùº Í±∑Îäî Í≤ÉÎßåÏúºÎ°úÎèÑ ÌûêÎßÅÏù¥ ÎêòÎäî ÏãúÍ∞ÑÏù¥ÏóàÏñ¥Ïöî. Ïû†Ïãú Î≥µÏû°Ìïú ÏùºÏÉÅÏóêÏÑú Î≤óÏñ¥ÎÇò..',
    image: '/imgs/sample3.jpg',
  },
  {
    id: 4,
    title: 'Ïó¨Ïàò Î∞§Î∞îÎã§Ïùò ÎÇ≠Îßå, Í∑∏Î¶¨Í≥† ÎßõÏßë ÌÉêÎ∞©',
    writer: 'ÎØ∏ÏãùÍ∞Ä',
    content:
      'Ïó¨ÏàòÏóê ÎèÑÏ∞©ÌïòÏûêÎßàÏûê ÎèåÏÇ∞ÎåÄÍµêÎ•º Í±¥ÎÑà Î∞îÎ°ú ÏºÄÏù¥Î∏îÏπ¥Î•º ÌÉîÏñ¥Ïöî. Í∑∏Î¶º Í∞ôÏïòÎçò ÎÖ∏ÏùÑÍ≥º ÏïºÍ≤ΩÏù¥ ÏïÑÏßÅÎèÑ ÏÉùÏÉùÌï©ÎãàÎã§. Ï†ÄÎÖÅÏóî..',
    image: '/imgs/sample4.png',
  },
];

const regionKeywords = [
  'ÏÑúÏö∏',
  'Ïù∏Ï≤ú',
  'ÎåÄÏ†Ñ',
  'ÎåÄÍµ¨',
  'Í¥ëÏ£º',
  'Î∂ÄÏÇ∞',
  'Ïö∏ÏÇ∞',
  'Í≤ΩÍ∏∞',
  'Í∞ïÏõê',
  'Ï∂©Î∂Å',
  'Ï∂©ÎÇ®',
  'ÏÑ∏Ï¢Ö',
  'Ï†ÑÎ∂Å',
  'Ï†ÑÎÇ®',
  'Í≤ΩÎ∂Å',
  'Í≤ΩÎÇ®',
  'Ï†úÏ£º',
  'Í∞ÄÌèâ',
  'ÏñëÏñë',
  'Í∞ïÎ¶â',
  'Í≤ΩÏ£º',
  'Ï†ÑÏ£º',
  'Ïó¨Ïàò',
  'Ï∂òÏ≤ú',
  'ÌôçÏ≤ú',
  'ÌÉúÏïà',
  'ÌÜµÏòÅ',
  'Í±∞Ï†ú',
  'Ìè¨Ìï≠',
  'ÏïàÎèô',
];
const themeKeywords = ['ÌûêÎßÅ', 'Ïï°Ìã∞ÎπÑÌã∞', 'ÎßõÏßë', 'Î¨∏Ìôî'];

const PostList = () => {
  const router = useRouter();
  const [searchTerm, setSearchTerm] = useState('');
  const [sortOrder, setSortOrder] = useState('popular');
  const [activeTab, setActiveTab] = useState<'ÏßÄÏó≠' | 'ÌÖåÎßà'>('ÏßÄÏó≠');
  const [activeRegion, setActiveRegion] = useState('ÏÑúÏö∏');
  const [posts, setPosts] = useState<PostType[]>([]);

  useEffect(() => {
    setPosts(testPosts);
  }, []);

  const handleKeywordClick = (keyword: string) => () => {
    setActiveRegion(keyword);
    setSearchTerm(keyword);
  };

  const handleSortChange = useCallback(
    (e: React.ChangeEvent<HTMLSelectElement>) => {
      setSortOrder(e.target.value);
    },
    []
  );
  const handleTabClick = useCallback(
    (tab: 'ÏßÄÏó≠' | 'ÌÖåÎßà') => () => {
      setActiveTab(tab);
    },
    []
  );
  const goToPostWrite = useCallback(() => {
    router.push('/postWrite');
  }, [router]);

  const filteredPosts = posts
    .filter((post) =>
      post.title.toLowerCase().includes(searchTerm.toLowerCase())
    )
    .sort((a, b) => (sortOrder === 'popular' ? b.id - a.id : a.id - b.id));

  const currentKeywords = activeTab === 'ÏßÄÏó≠' ? regionKeywords : themeKeywords;

  return (
    <div className={styles.pageContainer}>
      <div className={styles.centeredContainer}>
        <section className={styles.searchSection}>
          <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />
        </section>

        <div className={styles.mainWrapper}>
          <main className={styles.mainContent}>
            <div className={styles.sortOptions}>
              <select
                value={sortOrder}
                onChange={handleSortChange}
                className={styles.sortSelect}
              >
                <option value="popular">Ïù∏Í∏∞Ïàú</option>
                <option value="recent">ÏµúÏã†Ïàú</option>
              </select>
            </div>
            <div className={styles.postList}>
              {filteredPosts.map((post) => (
                <Link
                  href={`/posts/${post.id}`}
                  key={post.id}
                  className={styles.postItemLink}
                >
                  <div className={styles.postItem}>
                    <div className={styles.postTextContent}>
                      <h3 className={styles.postTitle}>{post.title}</h3>
                      <div className={styles.postMeta}>
                        <div className={styles.authorAvatar}></div>
                        <span className={styles.authorName}>{post.writer}</span>
                      </div>
                      <p className={styles.postExcerpt}>{post.content}</p>
                    </div>
                    <img
                      src={post.image}
                      alt={post.title}
                      className={styles.postImage}
                    />
                  </div>
                </Link>
              ))}
            </div>
          </main>

          <aside className={styles.sidebar}>
            <div className={styles.profileCard}>
              <div className={styles.profileHeader}>
                <img
                  src="/imgs/Ellipse5.png"
                  alt="profile"
                  className={styles.profileImage}
                />
                <p className={styles.username}>Î¶∞Îãò</p>
              </div>
              <div className={styles.profileDivider} />
              <div className={styles.profileActions}>
                <button>
                  <img src="/imgs/Popular.png" alt="Ïù∏Í∏∞Í∏Ä" />
                  <span>Ïù∏Í∏∞Í∏Ä Î≥¥Í∏∞</span>
                </button>
                <button onClick={goToPostWrite}>
                  <img src="/imgs/writing.png" alt="Í∏ÄÏì∞Í∏∞" />
                  <span>Í∏ÄÏì∞Í∏∞</span>
                </button>
                <button>
                  <img src="/imgs/myposts.png" alt="ÎÇ¥ Í∏Ä" />
                  <span>ÎÇ¥ Í∏ÄÎ≥¥Í∏∞</span>
                </button>
              </div>
            </div>
            <div className={styles.categoryContainer}>
              <div className={styles.categoryTabs}>
                <button
                  className={`${styles.categoryTab} ${
                    activeTab === 'ÏßÄÏó≠' ? styles.active : ''
                  }`}
                  onClick={handleTabClick('ÏßÄÏó≠')}
                >
                  ÏßÄÏó≠
                </button>
                <button
                  className={`${styles.categoryTab} ${
                    activeTab === 'ÌÖåÎßà' ? styles.active : ''
                  }`}
                  onClick={handleTabClick('ÌÖåÎßà')}
                >
                  ÌÖåÎßà
                </button>
              </div>
              <div className={styles.categoryItems}>
                {currentKeywords.map((keyword) => (
                  <span
                    key={keyword}
                    className={`${styles.categoryItem} ${
                      activeRegion === keyword ? styles.activeItem : ''
                    }`}
                    onClick={handleKeywordClick(keyword)}
                  >
                    {keyword}
                  </span>
                ))}
              </div>
            </div>
          </aside>
        </div>
      </div>
    </div>
  );
};

export default PostList;
